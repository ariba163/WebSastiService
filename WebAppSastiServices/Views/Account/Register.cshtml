@model WebAppSastiServices.Models.ViewModel.UserRegisterView

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

<!-- start page title section -->
<section class="page-title-section2 bg-img cover-background" data-overlay-dark="7" data-background="../img/bg/bg9.jpg">
    <div class="container">

        <div class="row">
            <div class="col-md-12">
                <h1>Registration</h1>
            </div>
            <div class="col-md-12">
                <ul>
                    <li><a href="@Url.Action("Index", "Home")">Home</a></li>
                    <li><a href="#">Registration</a></li>
                </ul>
            </div>
        </div>

    </div>
</section>
<!-- end page title section -->
<!-- start registration form -->
<section>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-11 col-lg-8 col-xl-7">

                <div class="common-block">

                    <div class="line-title">
                        <h3>Register</h3>
                    </div>

                    @using (Html.BeginForm("Register", "Account", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <div class="row">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                            <div class="col-sm-6 margin-5px-bottom">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.UserName)

                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Display name here" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })

                                </div>
                            </div>

                            <div class="col-sm-6 margin-5px-bottom">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.EmailID)

                                    @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email address here" } })
                                    @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                                    @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>

                        <div class="row">

                            <div class="col-sm-6 margin-5px-bottom">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Password)

                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password here" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-sm-6 margin-5px-bottom">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ConfirmPassword)

                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirm password here" } })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>

                        <div class="row">

                            <div class="col-sm-6 margin-5px-bottom">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Contact)

                                    @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control", @placeholder = "00923XXXXXXXXX" } })
                                    @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 margin-5px-bottom">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Address)

                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Address here", @rows = "4" } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @*<div class="col-md-offset-2 col-md-10">*@
                            <input type="submit" value="Register" class="butn theme btn-block margin-5px-top" />
                            @*</div>*@
                        </div>
                        <div class="text-center text-small margin-10px-top">
                            <span>Already have an account? <a href="@Url.Action("Login", "Home")">Login</a></span>
                        </div>
                    }

                    @*<div>
                            @Html.ActionLink("Back to List", "Index")
                        </div>*@

                </div>

            </div>
        </div>

    </div>
</section>
<!-- end registration form -->
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}
